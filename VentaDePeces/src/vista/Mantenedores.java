/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import controlador.PezDAO;
import modelo.*;
import javax.swing.JOptionPane;
/**
 *
 * @author Laboratorio
 */
public class Mantenedores extends javax.swing.JFrame {

    /**
     * Creates new form Mantenedores
     */
    public Mantenedores() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupEspecie = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jRadioButtonTropical = new javax.swing.JRadioButton();
        jRadioButtonDorado = new javax.swing.JRadioButton();
        jRadioButtonKoi = new javax.swing.JRadioButton();
        jLabelAtributo = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldID = new javax.swing.JTextField();
        jTextFieldAtributo = new javax.swing.JTextField();
        jTextFieldPrecio = new javax.swing.JTextField();
        jTextFieldStock = new javax.swing.JTextField();
        jButtonAgregar = new javax.swing.JButton();
        jButtonBuscar = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jButtonModificar = new javax.swing.JButton();
        jButtonListar = new javax.swing.JButton();
        jButtonLimpiar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaVisor = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Mantenedor de peces");

        jLabel2.setText("ID:");

        jLabel3.setText("Especie:");

        buttonGroupEspecie.add(jRadioButtonTropical);
        jRadioButtonTropical.setSelected(true);
        jRadioButtonTropical.setText("Pez Tropical");
        jRadioButtonTropical.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonTropicalActionPerformed(evt);
            }
        });

        buttonGroupEspecie.add(jRadioButtonDorado);
        jRadioButtonDorado.setText("Pez Dorado");
        jRadioButtonDorado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonDoradoActionPerformed(evt);
            }
        });

        buttonGroupEspecie.add(jRadioButtonKoi);
        jRadioButtonKoi.setText("Pez Koi");
        jRadioButtonKoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonKoiActionPerformed(evt);
            }
        });

        jLabelAtributo.setText("Color:");

        jLabel5.setText("Precio:");

        jLabel6.setText("Stock:");

        jButtonAgregar.setText("Agregar");
        jButtonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgregarActionPerformed(evt);
            }
        });

        jButtonBuscar.setText("Buscar");
        jButtonBuscar.setToolTipText("");
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });

        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        jButtonModificar.setText("Modificar");
        jButtonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarActionPerformed(evt);
            }
        });

        jButtonListar.setText("Listar");
        jButtonListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListarActionPerformed(evt);
            }
        });

        jButtonLimpiar.setText("Limpiar");
        jButtonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimpiarActionPerformed(evt);
            }
        });

        jLabel7.setText("Visor:");

        jTextAreaVisor.setColumns(20);
        jTextAreaVisor.setRows(5);
        jScrollPane1.setViewportView(jTextAreaVisor);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(223, 223, 223)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jRadioButtonTropical)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRadioButtonDorado)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRadioButtonKoi))
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(60, 60, 60)
                                .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabelAtributo)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel6))
                                        .addGap(33, 33, 33)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTextFieldAtributo, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                                            .addComponent(jTextFieldPrecio)
                                            .addComponent(jTextFieldStock))
                                        .addGap(91, 91, 91))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButtonAgregar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButtonBuscar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButtonEliminar))
                                    .addComponent(jLabel7))
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButtonModificar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButtonListar))
                                    .addComponent(jButtonLimpiar))))))
                .addContainerGap(115, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonTropical)
                    .addComponent(jRadioButtonDorado)
                    .addComponent(jRadioButtonKoi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelAtributo)
                    .addComponent(jTextFieldAtributo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextFieldPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jButtonLimpiar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAgregar)
                    .addComponent(jButtonBuscar)
                    .addComponent(jButtonEliminar)
                    .addComponent(jButtonModificar)
                    .addComponent(jButtonListar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void jButtonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgregarActionPerformed
        // TODO add your handling code here:
        String idPez,color,urlImg="";
        int precio,atributo,stock;
        /*
        Atributo, color y especie se definen dentro de los if de selección
        debido a que si no se hiciera, habría que definir los TextField más de
        una vez, cosa que el programa solo tomará la ultima línea de código que
        defina el TextField, además que atributo y color no son compatibles
        */
        try{
            idPez = jTextFieldID.getText();
            precio = Integer.parseInt(jTextFieldPrecio.getText());
            stock = Integer.parseInt(jTextFieldStock.getText());
            
            if(!idPez.equals("")) {
                if(jRadioButtonTropical.isSelected()==true){
                    String especie="Tropical";
                    color = jTextFieldAtributo.getText();
                    Pez pez = new PezTropical(idPez,color,especie,precio,stock,urlImg);
                    
                    if(PezDAO.agregar(pez) == true){
                    JOptionPane.showMessageDialog(rootPane, "Datos agregados exitosamente");
                    }else{
                        JOptionPane.showMessageDialog(rootPane, "Error, datos no agregados");
                    }
                }
                
                if(jRadioButtonDorado.isSelected()==true){
                    String especie="Dorado";
                    atributo = Integer.parseInt(jTextFieldAtributo.getText());
                    Pez pez = new PezDorado(idPez,especie,precio,atributo,stock,urlImg);
                    
                    if(PezDAO.agregar(pez) == true){
                        JOptionPane.showMessageDialog(rootPane, "Datos agregados exitosamente");
                    }else{
                        JOptionPane.showMessageDialog(rootPane, "Error, datos no agregados");
                    }
                }
                
                if(jRadioButtonKoi.isSelected()==true){
                    String especie="Koi";
                    atributo = Integer.parseInt(jTextFieldAtributo.getText());
                    Pez pez = new PezKoi(idPez,especie,precio,atributo,stock,urlImg);
                    
                    if(PezDAO.agregar(pez) == true){
                        JOptionPane.showMessageDialog(rootPane, "Datos agregados exitosamente");
                    }else{
                      JOptionPane.showMessageDialog(rootPane, "Error, datos no agregados");
                    }
                }
                
                
            }else{
                JOptionPane.showMessageDialog(rootPane,"Error, debe ingresar una ID");
            }
            
        } catch (Exception ev) {
            JOptionPane.showMessageDialog(rootPane, "Error de conexión");
        }
        limpiar();
    }//GEN-LAST:event_jButtonAgregarActionPerformed

    private void jButtonListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonListarActionPerformed
        // TODO add your handling code here:
        
        /*String lista = "";
        jTextAreaVisor.setText("");
        try {
            for(Pez pez : PezDAO.obtenerDatos()) {
                lista = lista + pez.toString() + "\n"; Terminar despues
            }
            jTextAreaVisor.append(lista);
        }catch (Exception ev) {
            //error
        }*/ 
    }//GEN-LAST:event_jButtonListarActionPerformed

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
        // TODO add your handling code here:
        String IDPez = "";
        IDPez = jTextFieldID.getText();
        
        try {
            //Método 1
            if(!IDPez.equals("")){
                if(jRadioButtonTropical.isSelected()==true){
                    Pez pez = PezDAO.buscar(IDPez);
                    if(pez != null){
                        limpiar();
                        jTextAreaVisor.setText("ID: "+pez.getIdPez()+"\n"+
                                "Especie: "+pez.getEspecie()+"\n"+
                                "Color: "+((PezTropical) pez).getColor()+"\n"+
                                "Precio: "+Integer.toString(pez.getPrecio())+"\n"+
                                "Stock: "+Integer.toString(pez.getStock()));
                    }else{
                        JOptionPane.showMessageDialog(rootPane,"Error, ID no encontrada");
                    }
                }
                
                if(jRadioButtonDorado.isSelected()==true){
                    Pez pez = PezDAO.buscar(IDPez);
                    if(pez != null){
                        limpiar();
                        jTextAreaVisor.setText("ID: "+pez.getIdPez()+"\n"+
                                "Especie: "+pez.getEspecie()+"\n"+
                                "Tamaño (cm): "+Integer.toString(((PezDorado) pez).getTamaño())+"\n"+
                                "Precio: "+Integer.toString(pez.getPrecio())+"\n"+
                                "Stock: "+Integer.toString(pez.getStock()));
                    }else{
                        JOptionPane.showMessageDialog(rootPane,"Error, ID no encontrada");
                    }
                }
                
                if(jRadioButtonKoi.isSelected()==true){
                    Pez pez = PezDAO.buscar(IDPez);
                    if(pez != null){
                        limpiar();
                        jTextAreaVisor.setText("ID: "+pez.getIdPez()+"\n"+
                                "Especie: "+pez.getEspecie()+"\n"+
                                "Edad: "+Integer.toString(((PezKoi) pez).getEdad())+"\n"+
                                "Precio: "+Integer.toString(pez.getPrecio())+"\n"+
                                "Stock: "+Integer.toString(pez.getStock()));
                    }else{
                        JOptionPane.showMessageDialog(rootPane,"Error, ID no encontrada");
                    }
                }
            }else{
                JOptionPane.showMessageDialog(rootPane, "Error, debe ingresar una ID");
            } 
            
            //Método 2
            /*Pez pez = PezDAO.buscar(IDPez);
            
            if (pez != null){
                jTextFieldPrecio.setText(Integer.toString(pez.getPrecio()));
                jTextFieldStock.setText(Integer.toString(pez.getStock()));
                
                if(pez.getEspecie().equals("Tropical")){
                    jRadioButtonTropical.setSelected(true);
                    jTextFieldAtributo.setText(((PezTropical) pez).getColor());
                }else if(pez.getEspecie().equals("Dorado")){
                    jRadioButtonDorado.setSelected(true);
                    jTextFieldAtributo.setText(Integer.toString(((PezDorado) pez).getTamaño()));
                }else{
                    jRadioButtonKoi.setSelected(true);
                    jTextFieldAtributo.setText(Integer.toString(((PezKoi) pez).getEdad()));
                }
                
                
            } else {
                JOptionPane.showMessageDialog(rootPane, "Error, ID no encontrada");
            }*/
        }catch (Exception ev){
            //error
        }
    }//GEN-LAST:event_jButtonBuscarActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        // TODO add your handling code here:
        String IDPez = "";
        
        try {
            IDPez = jTextFieldID.getText();
            
            if (PezDAO.eliminar(IDPez)== true){
                JOptionPane.showMessageDialog(rootPane, "Bien, datos eliminados...");
            }else{
                JOptionPane.showMessageDialog(rootPane, "Error, ID no encontrada...");
            }
        } catch (Exception e){
            //error
        }
        
        limpiar();
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jButtonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimpiarActionPerformed
        // TODO add your handling code here:
        limpiar();
        jTextAreaVisor.setText("");
    }//GEN-LAST:event_jButtonLimpiarActionPerformed

    private void jRadioButtonTropicalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonTropicalActionPerformed
        // TODO add your handling code here:
        jLabelAtributo.setText("Color:");
    }//GEN-LAST:event_jRadioButtonTropicalActionPerformed

    private void jRadioButtonDoradoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonDoradoActionPerformed
        // TODO add your handling code here:
        jLabelAtributo.setText("Tamaño (cm):");
    }//GEN-LAST:event_jRadioButtonDoradoActionPerformed

    private void jRadioButtonKoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonKoiActionPerformed
        // TODO add your handling code here:
        jLabelAtributo.setText("Edad:");
    }//GEN-LAST:event_jRadioButtonKoiActionPerformed

    private void jButtonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarActionPerformed
        // TODO add your handling code here:
        String idPez, color,urlImg ="";
        int precio,stock,atributo;
        
        try{
            idPez = jTextFieldID.getText();
            precio = Integer.parseInt(jTextFieldPrecio.getText());
            stock = Integer.parseInt(jTextFieldStock.getText());
            
            if(!idPez.equals("")) {
                if(jRadioButtonTropical.isSelected()==true){
                    String especie="Tropical";
                    color = jTextFieldAtributo.getText();
                    Pez pez = new PezTropical(idPez,color,especie,precio,stock,urlImg);
                    
                    if(PezDAO.modificar(pez) == true){
                    JOptionPane.showMessageDialog(rootPane, "Datos agregados exitosamente");
                    }else{
                        JOptionPane.showMessageDialog(rootPane, "Error, datos no agregados");
                    }
                }
                
                if(jRadioButtonDorado.isSelected()==true){
                    String especie="Dorado";
                    atributo = Integer.parseInt(jTextFieldAtributo.getText());
                    Pez pez = new PezDorado(idPez,especie,precio,atributo,stock,urlImg);
                    
                    if(PezDAO.modificar(pez) == true){
                        JOptionPane.showMessageDialog(rootPane, "Datos agregados exitosamente");
                    }else{
                        JOptionPane.showMessageDialog(rootPane, "Error, datos no agregados");
                    }
                }
                
                if(jRadioButtonKoi.isSelected()==true){
                    String especie="Koi";
                    atributo = Integer.parseInt(jTextFieldAtributo.getText());
                    Pez pez = new PezKoi(idPez,especie,precio,atributo,stock,urlImg);
                    
                    if(PezDAO.modificar(pez) == true){
                        JOptionPane.showMessageDialog(rootPane, "Datos agregados exitosamente");
                    }else{
                      JOptionPane.showMessageDialog(rootPane, "Error, datos no agregados");
                    }
                }
                
                
            }else{
                JOptionPane.showMessageDialog(rootPane,"Error, debe ingresar una ID");
            }
            
        } catch (Exception ev) {
            JOptionPane.showMessageDialog(rootPane, "Error de conexión");
        }
        limpiar();
        
    }//GEN-LAST:event_jButtonModificarActionPerformed

    private void limpiar(){
        jTextFieldID.setText("");
        jRadioButtonTropical.setSelected(true);
        jTextFieldAtributo.setText("");
        jTextFieldPrecio.setText("");
        jTextFieldStock.setText("");;
        jLabelAtributo.setText("Color:");
        
        //Elimina toda la información agregada a la interfaz
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mantenedores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mantenedores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mantenedores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mantenedores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Mantenedores().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupEspecie;
    private javax.swing.JButton jButtonAgregar;
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonLimpiar;
    private javax.swing.JButton jButtonListar;
    private javax.swing.JButton jButtonModificar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabelAtributo;
    private javax.swing.JRadioButton jRadioButtonDorado;
    private javax.swing.JRadioButton jRadioButtonKoi;
    private javax.swing.JRadioButton jRadioButtonTropical;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaVisor;
    private javax.swing.JTextField jTextFieldAtributo;
    private javax.swing.JTextField jTextFieldID;
    private javax.swing.JTextField jTextFieldPrecio;
    private javax.swing.JTextField jTextFieldStock;
    // End of variables declaration//GEN-END:variables
}
